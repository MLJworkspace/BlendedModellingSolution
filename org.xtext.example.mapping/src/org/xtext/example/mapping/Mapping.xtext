grammar org.xtext.example.mapping.Mapping with org.eclipse.xtext.common.Terminals

generate mapping "http://www.xtext.org/example/mapping/Mapping"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

MappingModel returns MappingModel:
	'MappingModel' name= STRING
	'SourceMetamodels' '{' SourceMetamodels+=SourceMetamodel ( "," SourceMetamodels+=SourceMetamodel)* '}' 
	('MainSourceMetamodel' MainSourceMetamodel=[SourceMetamodel|QualifiedName])?
	'TargetMetamodels' '{' TargetMetamodels+=TargetMetamodel ( "," TargetMetamodels+=TargetMetamodel)* '}' 
	('MappingRules''{' Rules+=MappingRule ( ";" Rules+=MappingRule)* '}' )?
	;
	

SourceMetamodel returns SourceMetamodel:
	{SourceMetamodel}
	name=STRING?
		(model=[ecore::EPackage|EString])
	;

TargetMetamodel returns TargetMetamodel:
	{TargetMetamodel}
	name=STRING?
		(model=[ecore::EPackage|EString])
	;
MappingRule returns MappingRule:
	{MappingRule}
	('MappingRule')?
	name=STRING?
	
	    ('source' source=[ecore::EObject|QualifiedName]('::' (EEnumLiteral=[ecore::EEnumLiteral]))?)?
		('target' target=[ecore::EObject|QualifiedName])?
		('operator' operator=Operator)?
		('condition' condition=STRING)?
		('comment' comment=EString)?
		('{' ChildRules+=MappingRule ( ";" ChildRules+=MappingRule)* '}' )?
		('{' ChildHelpers+=HelperStatement ( ";" ChildHelpers+=HelperStatement)* '}' )?
	;
	

	HelperStatement returns HelperStatement:
	{HelperStatement}
    ('HelperStatement')?
	                                                                                                                       
		('statement' statement=STRING)
		('{' ChildRules+=MappingRule ( "," ChildRules+=MappingRule)* '}' )?
		('{' ChildHelpers+=HelperStatement ( "," ChildHelpers+=HelperStatement)* '}' )?
	;
	
	enum Operator returns Operator:
				assign = 'assign' | add = 'add';
				
				
EString returns ecore::EString:
	STRING | ID  
;
QualifiedName:
	ID ('.' ID)* 
;
Metamodel returns Metamodel:
	SourceMetamodel | TargetMetamodel
;
